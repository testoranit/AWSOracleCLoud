Rajdeep saha
Serverless:_ you only pay for execution and not for the physical server.
No servers (pysical or vitual)
Auto scale with usage.
Never pay for idle.
Availibilty and fault tolerance build in(in more then 1 az)

In traditional way where u use Ec2 u have to rehydrate ur ami's for security patches and hydrate it again, this is also painful.

Compute:_ lambda, Fargate
storage:- AUrora severless, dynamodb, amazon s3

Integration & Analytics:- Amazon api gateway, Amazon SQS, AWS Stepfunctions, AWS Glu, SNS, APPSync

SOme more details abot lambda:-

Select memory from 128 to 10Gb
CPU and network allocated proportinally
max runtime 15 mins

Cost:-
every month u get 1M invocations and 400,000 GB of compute
charged in 1 ms increments
no commmitment required, no cost for being idle.

Lab:-
First lambda
create lambda function,choose runtime, heello world.
go to lambda function:- def lambda_handler(event,context) <--evnt is the thing that is served as an input, context is more info)
add:-
print(event)
print(context)

click on deploy and test--> give vaues as India,usa,denmark etc.

lab2:-
create a lambda for s3 trigger use buleprint template for creating Lambda
give input to lamba event accordingly name of s3 bucket,


*********API Gateway in real world

API:- a mediator for communicaion or a call madde to an entity.

Lab:- API GAteway calling a Lambda

create a Hello world lambda
create a API gateway with Get method and deploy the api gateway
get the API gateway URL and paste it in browser

Lab2:-
create a new lambda function
which says Hello from input country
add Post method in above API gateway and pass input deploy this
since through browser u can inly invoke get method for post method u need postman.

INstall postman and login and copy the post url from above api gateway
and paste it in postman
give body as {
"Country":"France"
}

you now post it and see the output.
*******************
API Gateway query parameters

https://url:/xyz? abc=something (after? abc=something is query parameter)
so u can see everything in url
So post is more secure then GET, for post u need message body to give as input.

use the same lambda function which takes ip s country name.

create an API gatewway above this time add a query paremeter nameofCOuntry checkemard=yes and request validation.
if there is no ip for query parameer it gives an error. also the query paremeer doesn't know
which lambda function to call..so got to Integrations and mappings and then mentione the query prameter variable as ip.

go to postman and hit the api url with ?nameofCOuntry=Europe

u see the output.

**AWS cross account API
u can do it just copy the full arn of the lamdba from other account and mention it in the api gateway account of the first account.
u will have to give certain permissions..just run that permission command in aws cli of second account.

*************
Lambda version and alias for api  traffic splitting 
Lambda can have versions Lambda 1 , lambda 2,lambda 3 now lambda 3 is the latest
lambda is an alias which can point to version of lambda.
It can point to multiple versions of lambda.
AP Gateway -->alias__--(50%) traffic to lambda 1 and 50% traffic to lamba 2, you can do that.
so u can do blue green design using this.
lab:- create a lamba1 version which hello world version 1 , then do it for other lambda versions.
Now create alias
so in API gateway config set alias name of lambda

*****************
API endpoints types
1)Edge optimised:- helps in reducing client latency from anywhere n the internet.
2)Regional:- designed to reduce latency when calls are made from the same region as the API.
3)Private:- Desined to expose APIS only inside ur VPC.

U can change endpoint type anytime.
API Gateway also has caching mecanism, u can see it using cloudwatch if the request comes from the caching.


********************RDS Proxy

users-->API Gateawy-->Lambda-->RDS
if traffic increased api agteway and lamnda can scale up but not RDS
Since RDS has connection liminit.
let's say lambda connects to RDS and does it job and the lambda stops 
the connection is still there, and if another lambda comes up it creates new connection, and not used previous
connection,
it exhauts the memory and compur process.
also another process could access rds and not able to get connection.

so  use rds prox
so here RDS proxy can sit here beween lambda and RDS.
users-->API Gateway-->Lambda-->RDS proxy-->RDS.

RDS proxy :- highly Available,allows applications to share pool of db connections.also allows to reuse orphan connections.
failover  without DNS change,66% reduced failover time for aurora,RDS
allocate how many connections lambda allowed to used.

**********AWS Step functions
**************AWS Storage for serverless.
![Nosql](https://github.com/testoranit/AWSOracleCLoud/assets/124513439/586fc088-14ad-4dab-a3cf-8c9f459de9e0)

SYnamo DB
fully managed nosql db
store uge amount of data
can serve any level of request traffic.
autoscale itself.
HA and durable.
Muli region and Multi master db using global tables.

table=like rbdms table
item in dynamo db= similar to row in rdbms table
atrribute is like a column in rdbms table an item cn have mutliple attributes or extra attribues.

an item is uniuqe in dynao db table which is identified uniquely by an attribyte in each item like empid)

u can have combo like (deptid,deptname) which can also be uniquely identified in dynamo db.

dynamo db can have
primary key
partition key:- identified the uniquenes off each item like empid.
Partitionkey and sort key:- refeered as composite key , has 2 attributes , 1 is te partiton key and the other is sort key.
No 2 items can have the same combo of these 2 attributes.(deptid,deptname)

Dyanmo db secondary index.
it lets u query the data in the table using an alternate key, in addition to queries against the prim key.
like where u want to fetch data other then the partiton key .

Global sec index:- an index with part key and sort key  that can be different   from those on the table.
Local sec index:- An index that has the same partition key as the tables,but a different sort key.

eg:- Emp table
empid: 1
dept id: 10
ename:abc
dname:xyz

empid: 2
dept id: 20
ename:efg
dname:lmn

here emp id is partition key, sort key is dept id:-
while quering u can use empid and/or dept id OR ename and/OR dname
this is gloabl sec index.

********Global tables
used for HA and low latency, it comes with extra cost.AWS takes care of replication accross regions.

************Read consistency and write capacity.
Dynamo db is multi-az enabled, data is replicated accross multiple AZ.

eg:-
AZ1
Emp table
empid: 1
dept id: 10
ename:abc
dname:qwe

Az2
Emp table
empid: 1
dept id: 10
ename:abc
dname:xyz

Az3
Emp table
empid: 1
dept id: 10
ename:abc
dname:xyz

Now the data is replicated accross multi-az, but let's say  the item is updated in 1 if there is a read by another user he may et old data from other az
so this is due to eventual consistent reads.
u cn have srong consistency reads, this is used for real time data  consistency.

Dynamo db reads and writes.
throughput is measured through capacity units

1 read capacity unit
means 1 strong consistenc read per second.
2 eventul consistent read per second.
for item upto 4 kb in size,for larger item more read capacity is required.

1 write capacity unit
1 write per second.
for item uto 1 Kb, for larger item,more capacity unit is required.

==Math time
if u create a table with 10 reads and 10 writes capacity units, assuming 4kb item size for read and 1 kb item size for write,
what should be the throughput (KB/second) for stongly consistent reads,writes?

Answer:- 1 read capacity unit=1 strongly consistent read per sec for 4 kb
10 read capcity unit=10 strong consistent read/ sec for 4 kb each=40KB/sec 
similary for write, 1KB*10 capcity units=10KB/sec

*************Dynamo db streams
an optonal feture that captures data modification events in dynamodb tables.The data about these events appear in the strem in
near real time, and in the order that events occured.

Events tht triiger the steam recod:
1) A new item is added to the table
2)AN item is updated.
3)AN item is delete from the table.


**********AWS AURORA RDS Serverless
only pay for what u use




